{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\git\\\\LearnReact\\\\NextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nexport var __N_SSG = true;\nexport default function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://static.thairath.co.th/media/B6FtNKtgSqRqbnNsUjIbmiEcqGTAplE6rsu5LmPq0IPkQwyRY7u98oyLTJdTE2ptNs5TH.jpg\",\n    address: \"Some address 5, 1234 Some City\",\n    title: \"A First Meetup\",\n    description: \"This is a first Meetup!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/git/LearnReact/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,eAAe,SAASC,aAAT,GAAyB;AACpC,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,+GADV;AAEI,IAAA,OAAO,EAAC,gCAFZ;AAGI,IAAA,KAAK,EAAC,gBAHV;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KAXuBA,a","sourcesContent":["import React from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nexport default function MeetupDetails() {\r\n    return (\r\n        <MeetupDetail\r\n            image='https://static.thairath.co.th/media/B6FtNKtgSqRqbnNsUjIbmiEcqGTAplE6rsu5LmPq0IPkQwyRY7u98oyLTJdTE2ptNs5TH.jpg'\r\n            address='Some address 5, 1234 Some City'\r\n            title='A First Meetup'\r\n            description='This is a first Meetup!'\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const getStaticPaths = async () => {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    // client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        }))\r\n    }\r\n\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetup = await meetupsCollection.findOne({ '_id': meetupId }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetup._id,\r\n                image: meetup.image,\r\n                address: meetup.address,\r\n                title: meetup.title,\r\n                description: meetup\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}