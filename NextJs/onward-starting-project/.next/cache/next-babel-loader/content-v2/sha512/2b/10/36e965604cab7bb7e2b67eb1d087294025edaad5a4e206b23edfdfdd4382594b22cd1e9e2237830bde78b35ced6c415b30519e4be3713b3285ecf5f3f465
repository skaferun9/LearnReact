{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\git\\\\LearnReact\\\\NextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nexport default function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData,\n    address: props.address,\n    title: props.title,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    '_id': ObjectId(meetupId)\n  }).toArray();\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        image: meetup.image,\n        address: meetup.address,\n        title: meetup.title,\n        description: meetup\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/git/LearnReact/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","address","title","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","close","id","image"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACzC,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UADjB;AAEI,IAAA,OAAO,EAAED,KAAK,CAACE,OAFnB;AAGI,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAII,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;AAGD,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,6GADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CANsC,CAOtC;;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AASH,CAjBM;AAmBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,6GADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMQ,MAAM,GAAG,MAAMT,iBAAiB,CAACe,OAAlB,CAA0B;AAAE,WAAO1B,QAAQ,CAACsB,QAAD;AAAjB,GAA1B,EAAyDN,OAAzD,EAArB;AACAR,EAAAA,MAAM,CAACmB,KAAP;AAEA,SAAO;AACHzB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRyB,QAAAA,EAAE,EAAER,MAAM,CAACL,GAAP,CAAWQ,QAAX,EADI;AAERM,QAAAA,KAAK,EAAET,MAAM,CAACS,KAFN;AAGRzB,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAHR;AAIRC,QAAAA,KAAK,EAAEe,MAAM,CAACf,KAJN;AAKRC,QAAAA,WAAW,EAAEc;AALL;AADT;AADJ,GAAP;AAWH,CArBM","sourcesContent":["import React from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nexport default function MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            image={props.meetupData}\r\n            address={props.address}\r\n            title={props.title}\r\n            description={props.description}\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const getStaticPaths = async () => {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    // client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        }))\r\n    }\r\n\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://korn3584:Cocosweet0123@cluster0.dhuzp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetup = await meetupsCollection.findOne({ '_id': ObjectId(meetupId) }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetup._id.toString(),\r\n                image: meetup.image,\r\n                address: meetup.address,\r\n                title: meetup.title,\r\n                description: meetup\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}